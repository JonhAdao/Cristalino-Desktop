package br.com.manicure.gui.procedimentos;

import br.com.manicure.dao.factory.DAOFactory;
import br.com.manicure.gui.FixedButtonModel;
import br.com.manicure.gui.agendamento.EditarAgendamento;
import br.com.manicure.model.Procedimento;
import br.com.manicure.tabelas.ProcedimentoTable;
import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.plaf.ColorUIResource;

/**
 *
 * @author Jhon
 */
public class ProcedimentoEditar extends javax.swing.JFrame {

    private final EditarAgendamento editarAgendamento;
    private final ProcedimentoTable tableModelProcedimentos = new ProcedimentoTable();

    /**
     * Creates new form ProcedimentoEditar
     *
     * @param e
     */
    public ProcedimentoEditar(EditarAgendamento e) {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/br/com/manicure/icones/procedimentoicon.png")).getImage());
        bOkProcedimento.setModel(new FixedButtonModel());
        bOkProcedimento.setBorder(BorderFactory.createEtchedBorder(0));
        bCancelarProcedimento.setModel(new FixedButtonModel());
        bCancelarProcedimento.setBorder(BorderFactory.createEtchedBorder(0));
        scrollPanelPaciente.getViewport().setBackground(Color.WHITE);
        scrollPanelPaciente.setBorder(BorderFactory.createEmptyBorder());
        tableProcedimentos.setShowVerticalLines(false);
        List<Procedimento> lista = DAOFactory.getProcedimentoDAO().listar();
        if (lista != null) {
            tableModelProcedimentos.addLista(lista);
        }
        tableProcedimentos.setModel(tableModelProcedimentos);
        UIDefaults defaults = UIManager.getLookAndFeelDefaults();
        defaults.put("Button.focus", new ColorUIResource(new Color(0, 0, 0, 0)));
        this.editarAgendamento = e;
        this.setTitle("Buscar Procedimento");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        input = new javax.swing.JPanel();
        lPesquisar = new javax.swing.JLabel();
        tBuscarProcedimento = new javax.swing.JTextField();
        bOkProcedimento = new javax.swing.JButton();
        bCancelarProcedimento = new javax.swing.JButton();
        mainPaciente = new javax.swing.JPanel();
        scrollPanelPaciente = new javax.swing.JScrollPane();
        tableProcedimentos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        input.setBackground(new java.awt.Color(247, 247, 247));

        lPesquisar.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lPesquisar.setText("Pesquisar");
        lPesquisar.setMaximumSize(new java.awt.Dimension(40, 20));
        lPesquisar.setMinimumSize(new java.awt.Dimension(40, 20));
        lPesquisar.setPreferredSize(new java.awt.Dimension(40, 20));

        tBuscarProcedimento.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tBuscarProcedimentoCaretUpdate(evt);
            }
        });

        bOkProcedimento.setBackground(new java.awt.Color(0, 102, 52));
        bOkProcedimento.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        bOkProcedimento.setForeground(new java.awt.Color(255, 255, 255));
        bOkProcedimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/manicure/icones/Ok.png"))); // NOI18N
        bOkProcedimento.setText("Ok");
        bOkProcedimento.setBorder(null);
        bOkProcedimento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bOkProcedimento.setDoubleBuffered(true);
        bOkProcedimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bOkProcedimentoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bOkProcedimentoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bOkProcedimentoMouseExited(evt);
            }
        });

        bCancelarProcedimento.setBackground(new java.awt.Color(211, 0, 0));
        bCancelarProcedimento.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        bCancelarProcedimento.setForeground(new java.awt.Color(255, 255, 255));
        bCancelarProcedimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/manicure/icones/cancelar.png"))); // NOI18N
        bCancelarProcedimento.setText("Cancelar");
        bCancelarProcedimento.setBorder(null);
        bCancelarProcedimento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bCancelarProcedimento.setDoubleBuffered(true);
        bCancelarProcedimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bCancelarProcedimentoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bCancelarProcedimentoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bCancelarProcedimentoMouseExited(evt);
            }
        });

        mainPaciente.setLayout(new java.awt.CardLayout());

        scrollPanelPaciente.setBorder(null);

        tableProcedimentos.setAutoCreateRowSorter(true);
        tableProcedimentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProcedimentos.setDoubleBuffered(true);
        scrollPanelPaciente.setViewportView(tableProcedimentos);

        mainPaciente.add(scrollPanelPaciente, "card2");

        javax.swing.GroupLayout inputLayout = new javax.swing.GroupLayout(input);
        input.setLayout(inputLayout);
        inputLayout.setHorizontalGroup(
            inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
                    .addGroup(inputLayout.createSequentialGroup()
                        .addComponent(lPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tBuscarProcedimento))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bOkProcedimento, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bCancelarProcedimento, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        inputLayout.setVerticalGroup(
            inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tBuscarProcedimento, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(mainPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bOkProcedimento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCancelarProcedimento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(input, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bOkProcedimentoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bOkProcedimentoMouseEntered
        bOkProcedimento.setBackground(Color.decode("#008542"));
    }//GEN-LAST:event_bOkProcedimentoMouseEntered

    private void bOkProcedimentoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bOkProcedimentoMouseExited
        bOkProcedimento.setBackground(Color.decode("#006634"));
    }//GEN-LAST:event_bOkProcedimentoMouseExited

    private void bCancelarProcedimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCancelarProcedimentoMouseClicked
        this.dispose();
    }//GEN-LAST:event_bCancelarProcedimentoMouseClicked

    private void bCancelarProcedimentoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCancelarProcedimentoMouseEntered
        bCancelarProcedimento.setBackground(Color.decode("#AD0000"));
    }//GEN-LAST:event_bCancelarProcedimentoMouseEntered

    private void bCancelarProcedimentoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCancelarProcedimentoMouseExited
        bCancelarProcedimento.setBackground(Color.decode("#D30000"));
    }//GEN-LAST:event_bCancelarProcedimentoMouseExited

    private void bOkProcedimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bOkProcedimentoMouseClicked
        int row = this.tableProcedimentos.getSelectedRow();
        if (row > -1) {
            Procedimento p = this.tableModelProcedimentos.getProcedimento(row);
            this.editarAgendamento.setProcedimento(p);

            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um procedimento da tabela", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bOkProcedimentoMouseClicked

    private void tBuscarProcedimentoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tBuscarProcedimentoCaretUpdate
        this.searchProcedimento();
    }//GEN-LAST:event_tBuscarProcedimentoCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcedimentoEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcedimentoEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcedimentoEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcedimentoEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /*  java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProcedimentoEditar().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelarProcedimento;
    private javax.swing.JButton bOkProcedimento;
    private javax.swing.JPanel input;
    private javax.swing.JLabel lPesquisar;
    private javax.swing.JPanel mainPaciente;
    private javax.swing.JScrollPane scrollPanelPaciente;
    private javax.swing.JTextField tBuscarProcedimento;
    private javax.swing.JTable tableProcedimentos;
    // End of variables declaration//GEN-END:variables

    private void searchProcedimento() {
        String busca = this.tBuscarProcedimento.getText();
        List<Procedimento> lista;
        lista = DAOFactory.getProcedimentoDAO().filtrar(busca);
        if (lista != null) {
            this.tableModelProcedimentos.addLista(lista);
        }
        this.tBuscarProcedimento.requestFocusInWindow();

    }
}
